package com.master.design.structure.flyweight;

/**
 * 享元模式<br><br>
 * 是一个提高程序效率和性能的模式，通过与其他类似对象共享数据来减少内存的占用情况，大大加快程序的运行速度
 * <br><br>
 * 享元对象能做到共享的关键是区分内蕴状态(internal state)和外蕴状态(external state)，内蕴状态是存储在享元对象内部的，并且
 * 不会随环境的改变而有所改变，外蕴状态是随环境的改变而变化的、不可共享的，享元对象的外蕴状态必须由客户端保存，并在享元对象
 * 被创建后，在需要使用的时候再传入到享元对象内部，外蕴状态不可以影响享元对象的内蕴状态，它们是相互独立的
 *
 * <br><br>
 * 享元模式分成两种形式：单纯享元模式和复合享元模式
 * <br>
 * 在单纯模式中，所有的享元对象都是可以共享的
 * <br>
 * 复合模式中，将一些单纯享元使用合成模式加以复用，形成复合享元对象，这样的复合享元对象本身不能共享，但是它们可以分解成单纯
 * 享元对象，而后者可以共享
 */
public class FlyweightClient {
}